package ru.jucharick;

/*
1. Пять безмолвных философов сидят вокруг круглого стола, перед каждым философом стоит тарелка спагетти.
2. Вилки лежат на столе между каждой парой ближайших философов.
3. Каждый философ может либо есть, либо размышлять.
4. Философ может есть только тогда, когда держит две вилки — взятую справа и слева.
5. Философ не может есть два раза подряд, не прервавшись на размышления. (можно не учитывать)
6. Философ может взять только две вилки сразу, то есть обе вилки должны быть свободны.
Описать в виде кода такую ситуацию. Каждый философ должен поесть три раза
*/

public class Main {
    public static void main(String[] args) {
        Table table = new Table();
        table.start();
    }
}

// В данной реализации не исключено, что два философа одновременно будут пользоваться одной вилкой. 
// Для простоты оставим за столом двух философов. Оба делают проверку и видят, что вилки свободны и 
// затем оба начинают их брать (присвакивать значения true). 
// volatile тут никак не спасает положение


// У преподавателя создан синхронизированный метод tryGetForks (synchronized boolean) - допускает только один поток к ресурсу,
// создан в Table
// таким образом нет дедлока если у нас 2 философа
